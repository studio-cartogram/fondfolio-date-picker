import React from 'react'
import styled from 'styled-components'
import Week from '../Week'
import { weeksStyles } from './styles'
import { moveToDayOfWeek, clone } from '../DateUtils'

const StyledWeeks = styled.div`${weeksStyles}`

class Weeks extends React.Component {
  state = {
    view: clone(this.props.view),
  }

  getWeekStartDates = view => {
    view.setDate(1)
    view = moveToDayOfWeek(clone(view), 0)

    const current = clone(view);
    current.setDate(current.getDate()+7)

    const starts = [view];
    const month = current.getMonth()

    while (current.getMonth() === month) {
      starts.push(clone(current))
      current.setDate(current.getDate()+7)
    }

    return starts
  }

  renderWeeks = view => {
    const {
      selected,
      onSelect,
      minDate,
      maxDate,
    } = this.props
    const starts = this.getWeekStartDates(view)
    const month = starts[1].getMonth()

    return starts.map((s, i) => (
      <Week
        key={i}
        start={s}
        month={month}
        selected={selected}
        onSelect={onSelect}
        minDate={minDate}
        maxDate={maxDate}
      />
    ))
  }

  moveTo = (view, isForward) => {
    this.setState({
      view: clone(view)
    })
  }

  render() {
    const {
      view,
    } = this.state

    const {
      children,
      ...rest
    } = this.props

    return (
      <StyledWeeks {...rest}>
        {this.renderWeeks(view)}
      </StyledWeeks>
    )
  }
}

export default Weeks
