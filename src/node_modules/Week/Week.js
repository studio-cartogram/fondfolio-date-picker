import React from 'react'
import styled from 'styled-components'
import { dayStyles, weekStyles } from './styles'
import { toDayOfMonthString, isSameDay, isBefore, isAfter, clone } from '../dateHelpers'

const StyledWeek = styled.div`${weekStyles}`
const StyledDay = styled.div`${dayStyles}`

class Week extends React.Component {

  buildDays = start => {
    const days = [clone(start)]
    let cloned = clone(start)

    for (var i = 1; i <= 6; i++) {
      cloned = clone(cloned)
      cloned.setDate(cloned.getDate()+1)
      days.push(cloned)
    }

    return days;
  }

  isOtherMonth = day => this.props.month !== day.month()

  getDayType = day => {
    let props = {}
    if (isSameDay(day, new Date())) {
      props = { ...props, today: true }
    }
    if (this.props.month !== day.getMonth()) {
      props = { ...props, otherMonth: true }
    }
    if (this.props.selected && isSameDay(day, this.props.selected)) {
      props = { ...props, selected: true }
    }
    if (this.isDisabled(day)) {
      props = { ...props, disabled: true }
    }
    return props
  }

  onSelect = day => {
    if (!this.isDisabled(day)) {
      this.props.onSelect(day)
    }
  }

  isDisabled = day => (this.props.minDate && isBefore(day, this.props.minDate)) || (this.props.maxDate && isAfter(day, this.props.maxDate))

  render() {
    const {
      start,
      Day,
      activeColor,
      disabledColor,
      otherMonthColor,
      monthBackgroundColor,
      ...rest
    } = this.props
    const days = this.buildDays(start)
    return (
      <StyledWeek {...rest}>
        { days.map((day, i) => (
          <StyledDay
            key={i}
            onClick={this.onSelect.bind(null, day)}
            activeColor={activeColor}
            disabledColor={disabledColor}
            otherMonthColor={otherMonthColor}
            monthBackgroundColor={monthBackgroundColor}
            {...this.getDayType(day)}
          >
            <Day>{toDayOfMonthString(day)}</Day>
          </StyledDay>
          ))
        }
      </StyledWeek>
    )
  }
}
export default Week
